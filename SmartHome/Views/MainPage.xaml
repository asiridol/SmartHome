<?xml version="1.0" encoding="UTF-8"?>
<local:ProgressAwareViewModelPage 
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    xmlns:local="clr-namespace:SmartHome.Views;assembly:SmartHome" 
    xmlns:xfx="clr-namespace:Xfx;assembly=Xfx.Controls"
    xmlns:vm="clr-namespace:SmartHome.ViewModels;assembly=SmartHome"
    xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms" 
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:viewcell="clr-namespace:SmartHome.Controls;assembly=SmartHome"
    xmlns:converters="clr-namespace:SmartHome.Converters;assembly=SmartHome"
    xmlns:b="clr-namespace:SmartHome.Behaviors;assembly=SmartHome"
    ios:Page.UseSafeArea="true"
    x:TypeArguments="vm:MainPageViewModel"
    x:Class="SmartHome.Views.MainPage"
    prism:ViewModelLocator.AutowireViewModel="True"
    ShowProgress="{Binding IsBusy}" 
    Title="Rooms">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:BoolToColorConverter x:Key="BoolToColor"/>
            <converters:BoolToOnOffConverter x:Key="BoolToOnOff"/>
            <converters:ListOfStringsToStringConverter x:Key="ListOfStringsToString"/>
            <converters:BoolToInverseColorConverter x:Key="BoolToInverseColor"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ListView x:Name="RoomsList" ItemsSource="{Binding Rooms}" IsPullToRefreshEnabled="true" RefreshCommand="{Binding RefreshRoomsCommand}" IsRefreshing="{Binding IsBusy}" RowHeight="200" SeparatorColor="Black" SelectionMode="Single">
          <ListView.ItemTemplate>
            <DataTemplate>
              <viewcell:SelectableViewCell SelectedBackgroundColor="LightGray">
                <RelativeLayout HeightRequest="30" HorizontalOptions="FillAndExpand">
                        <Label x:Name="roomName" Text="{Binding RoomName}"
                           RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height,Factor=.5,Constant=-10}"
                           RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1,Constant=0}" Margin="20,0,20,0"/>
                        <Label x:Name="roomDevices" Text="{Binding Devices} Converter={StaticResource ListOfStringsToString}" FontSize="Small"
                                RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView,ElementName=roomName, Property=Y,Factor=1,Constant=20}"
                           RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1,Constant=0}" Margin="20,0,20,0"/>
                        <BoxView x:Name="onStatusShadow" BackgroundColor="Black" CornerRadius="5" Opacity="0.5"
                           RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView,  Property=Y, ElementName=onStatus, Factor=1,Constant=-2}"
                           RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToView, Property=Width, ElementName=onStatus, Factor=1, Constant=4}"
                           RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToView, Property=Height, ElementName=onStatus, Factor=1, Constant=4}"
                           RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, Property=X, ElementName=onStatus, Factor=1, Constant=-2}"/>
                        <BoxView x:Name="onStatus" BackgroundColor="{Binding IsOn, Converter={StaticResource BoolToColor}" CornerRadius="5" 
                           RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height,Factor=.5,Constant=-5}"
                           RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToView, Property=Width, ElementName=roomStatus, Factor=1, Constant=10}"
                           RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToView, Property=Height, ElementName=roomStatus, Factor=1, Constant=10}"
                           RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, Property=X, ElementName=roomStatus, Factor=1, Constant=-5}"/>
                        <Label x:Name="roomStatus" Text="{Binding IsOn, Converter={StaticResource BoolToOnOff}" TextColor="{Binding IsOn, Converter={StaticResource BoolToInverseColor}"
                          RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height,Factor=.5,Constant=0}"
                          RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent,  Property=Width, Factor=1, Constant=-50}"/>
                </RelativeLayout>
              </viewcell:SelectableViewCell>
            </DataTemplate>                    
          </ListView.ItemTemplate>   
        </ListView>
    </ContentPage.Content>
</local:ProgressAwareViewModelPage>
